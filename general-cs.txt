1. What is the deep link

- Deep link is anything but homepage, any link which accesses to some page is
considered as deep link, but mainly in my opinion deep link is the complex URL
which contains nested paths, and query strings, by which web page can determine 
intention of the user, for example www.example.com/ads?showmore=true
can be considered as deep link, because it does two actions, ie goes deep,
first it goes to route by /ads path then by query string, it can show detailed information,
or pop up some modal, or do some advanced thing, like a parameter for CLI, example would be
git checkout -b, we know that git is just a top level command, checkout is subcommand, analogy of url it would be
a path, not quite same but still, and -b is option/flag indicator of what additional action needs to be done
so basically URL in essense really familiar to commands. Honestly when someone says a link, it's a 99% just a deep 
link, otherwise everyone would just say, go to site with name of such and such. most of the time links being 
sent accross net contains more info like paths and query strings, even segments, which can be used as 
navigation to certain html elements.

www.git.com/checkout?b=true can be analogy of real CLI command
https://www.techtarget.com/whatis/definition/deep-link#:~:text=A%20deep%20link%20is%20a,can%20thus%20be%20considered%20deep.

2. What is lazy loading eager loading?

- Lazy loading is the teqnique of loading certain resource only in certain condition,
for example: there can be pictures in the blog, they being loaded only after you scroll down 
and only when it's fitting in the viewport, it's lazy loading, because you don't load them 
immediatelly but rather later, hence lazy loading, I used to say I can't go to groccery shop to
buy some fruits or bread because I was lazy, I was saying: oh cmon I'll do it later, sounds familiar? 
Eager loading is the pre loading of resources, for example you can have application, which needs to load some 
big amount of data, if you know it may take decent time, you can avoid it by pre loading it at the beggining of application 
startup, hence it will be stored in ram and will be easy to retrieve, in some scenarios eager loading is just the default loading 
for example, there is an attribute 'loading' for iframe element, in this case eager true, just doesn't make sense 
because even if you won't specify it, it will do it in eager way, unless you put 'lazy' instead. so in some cases 
it's hard to tell wheter it does real eager loading or just usual loading.
